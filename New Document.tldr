{
	"tldrawFileFormatVersion": 1,
	"schema": {
		"schemaVersion": 1,
		"storeVersion": 4,
		"recordVersions": {
			"asset": {
				"version": 1,
				"subTypeKey": "type",
				"subTypeVersions": {
					"image": 3,
					"video": 3,
					"bookmark": 1
				}
			},
			"camera": {
				"version": 1
			},
			"document": {
				"version": 2
			},
			"instance": {
				"version": 24
			},
			"instance_page_state": {
				"version": 5
			},
			"page": {
				"version": 1
			},
			"shape": {
				"version": 3,
				"subTypeKey": "type",
				"subTypeVersions": {
					"group": 0,
					"text": 1,
					"bookmark": 2,
					"draw": 1,
					"geo": 8,
					"note": 5,
					"line": 4,
					"frame": 0,
					"arrow": 3,
					"highlight": 0,
					"embed": 4,
					"image": 3,
					"video": 2
				}
			},
			"instance_presence": {
				"version": 5
			},
			"pointer": {
				"version": 1
			}
		}
	},
	"records": [
		{
			"gridSize": 10,
			"name": "",
			"meta": {},
			"id": "document:document",
			"typeName": "document"
		},
		{
			"id": "pointer:pointer",
			"typeName": "pointer",
			"x": 1264.4037447437227,
			"y": 5598.257980992578,
			"lastActivityTimestamp": 1710856521138,
			"meta": {}
		},
		{
			"meta": {},
			"id": "page:page",
			"name": "Page 1",
			"index": "a1",
			"typeName": "page"
		},
		{
			"x": -159.1874408448919,
			"y": -4753.594352463331,
			"z": 0.4395467645333884,
			"meta": {},
			"id": "camera:page:page",
			"typeName": "camera"
		},
		{
			"editingShapeId": null,
			"croppingShapeId": null,
			"selectedShapeIds": [],
			"hoveredShapeId": null,
			"erasingShapeIds": [],
			"hintingShapeIds": [],
			"focusedGroupId": null,
			"meta": {},
			"id": "instance_page_state:page:page",
			"pageId": "page:page",
			"typeName": "instance_page_state"
		},
		{
			"followingUserId": null,
			"opacityForNextShape": 1,
			"stylesForNextShape": {
				"tldraw:geo": "rectangle",
				"tldraw:color": "light-green",
				"tldraw:size": "m",
				"tldraw:font": "draw",
				"tldraw:horizontalAlign": "start"
			},
			"brush": null,
			"scribbles": [],
			"cursor": {
				"type": "default",
				"rotation": 0
			},
			"isFocusMode": false,
			"exportBackground": true,
			"isDebugMode": false,
			"isToolLocked": false,
			"screenBounds": {
				"x": 0,
				"y": 0,
				"w": 637.5,
				"h": 530.8333129882812
			},
			"insets": [
				false,
				true,
				true,
				false
			],
			"zoomBrush": null,
			"isGridMode": false,
			"isPenMode": false,
			"chatMessage": "",
			"isChatting": false,
			"highlightedUserIds": [],
			"canMoveCamera": true,
			"isFocused": true,
			"devicePixelRatio": 2.880000114440918,
			"isCoarsePointer": false,
			"isHoveringCanvas": true,
			"openMenus": [],
			"isChangingStyle": false,
			"isReadonly": false,
			"meta": {},
			"duplicateProps": null,
			"id": "instance:instance",
			"currentPageId": "page:page",
			"typeName": "instance"
		},
		{
			"x": 246.87496948242188,
			"y": 298.43865977293393,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "geo",
			"props": {
				"w": 1031.847250484604,
				"h": 39.956512346206694,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "a1",
			"id": "shape:2b9bVaY8FlpNZfoT2rvGt",
			"typeName": "shape"
		},
		{
			"x": 246.8333282470703,
			"y": 338.7510681152344,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "geo",
			"props": {
				"w": 1031.9182844628995,
				"h": 271.6492009617251,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "a2",
			"id": "shape:tVLN7TZpGbl3rIip_-j6m",
			"typeName": "shape"
		},
		{
			"x": 274.5162696838379,
			"y": 300.7812328338623,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 114.42772674560547,
				"text": "functions",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "a4",
			"id": "shape:Na4J31puozF4GyEVwMjwb",
			"typeName": "shape"
		},
		{
			"x": 771.5105895996094,
			"y": 301.36988639831543,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 137.37152099609375,
				"text": "Description",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "a5",
			"id": "shape:jBWAXU4-4DJZy2ckMFxaM",
			"typeName": "shape"
		},
		{
			"x": 279.6968075850126,
			"y": 355.20070751935356,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 105.21006774902344,
				"text": "readline",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "a6",
			"id": "shape:Ar0PZcoG2YyKWSvpGk4CT",
			"typeName": "shape"
		},
		{
			"x": 452.2335521839449,
			"y": 373.3779934054044,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 806.6760283559604,
				"text": "-readline will read a line from the terminal and return it, using\n       prompt as a prompt.  If prompt is NULL or the empty string, no\n       prompt is issued.  The line returned is allocated with malloc(3);\n       the caller must free it when finished.  The line returned has the\n       final newline removed, so only the text of the line remains.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9330093297956439
			},
			"parentId": "page:page",
			"index": "a7",
			"id": "shape:m-dBgRaui9HBV4fa5_7kz",
			"typeName": "shape"
		},
		{
			"x": 248.12281799316406,
			"y": 298.3761215842817,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "geo",
			"props": {
				"w": 212.61561149759652,
				"h": 5247.482384530887,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "a8",
			"id": "shape:rifa4hInoB3HOAbihEBZR",
			"typeName": "shape"
		},
		{
			"x": 248.62882222504493,
			"y": 612.0616620611726,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "geo",
			"props": {
				"w": 1029.7389999850097,
				"h": 340.78777199605827,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "a9",
			"id": "shape:6F_s-Ib5rOFcN9xnBdv2B",
			"typeName": "shape"
		},
		{
			"x": 257.0972286259755,
			"y": 628.5113014652918,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 154.00021362304688,
				"text": "add_history",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aB",
			"id": "shape:arRJAziN-pDVYmID08r2w",
			"typeName": "shape"
		},
		{
			"x": 454.3265173546241,
			"y": 630.1547655587121,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 804.76513671875,
				"text": "-The add_history function adds the specifiedline of input to the \nhistory list maintained by the readline library.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aC",
			"id": "shape:SSGgdmY2msZXfEHSPp_dU",
			"typeName": "shape"
		},
		{
			"x": 455.1045013604986,
			"y": 699.1928530752562,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 739.4114379882812,
				"text": "-Once added, the line becomes part of the history that can\n be accessed and reused by subsequent calls to readline",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aD",
			"id": "shape:lg5GNIZer0zZW1JzDTKjY",
			"typeName": "shape"
		},
		{
			"x": 456.60854776756116,
			"y": 773.4621485066739,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 720.3305053710938,
				"text": "-This function is typically called after readline to add the\n input provided by the user to the history list.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aE",
			"id": "shape:Khn6YGanxZIOEIXDeDfTf",
			"typeName": "shape"
		},
		{
			"x": 450.37263004259876,
			"y": 844.88511337638,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 791.5653076171875,
				"text": "-The history list allows users to recall previously entered lines \nof inputusing features suchas arrow keys \nin a command-line interface.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aF",
			"id": "shape:xqrXgFFbF0QLULymZFWZq",
			"typeName": "shape"
		},
		{
			"x": 249.99030964331894,
			"y": 957.4988110942185,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "geo",
			"props": {
				"w": 1030.3453347204381,
				"h": 155.25539419986183,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "aG",
			"id": "shape:FOfcK6Bnqzi_qfjjRaOFL",
			"typeName": "shape"
		},
		{
			"x": 255.4560237175608,
			"y": 982.4005791936701,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 206.56097412109375,
				"text": "rl_clear_history",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 0.8341456493610419
			},
			"parentId": "page:page",
			"index": "aI",
			"id": "shape:hNzM5e_hnzcUY4AEMJzES",
			"typeName": "shape"
		},
		{
			"x": 461.54209518596804,
			"y": 972.024308880784,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 819.7884972873901,
				"text": "-The rl_clear_history() function is part of the GNU Readline library. \nWhen called, it clears the history maintained by Readline,\n removing all previously entered commands from memory.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9493906331349082
			},
			"parentId": "page:page",
			"index": "aJ",
			"id": "shape:jtTF38zgI9dvg_eCD94Om",
			"typeName": "shape"
		},
		{
			"x": 249.99030964331894,
			"y": 1111.222732274468,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "geo",
			"props": {
				"w": 1029.1619312701991,
				"h": 265.52255340468747,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "aK",
			"id": "shape:UyU8NkWUZ-zhJ0G6Jn5M-",
			"typeName": "shape"
		},
		{
			"x": 256.2287734609339,
			"y": 1136.5643015436772,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 200.26040649414062,
				"text": "rl_on_new_line",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 0.8834691811267336
			},
			"parentId": "page:page",
			"index": "aL",
			"id": "shape:TgEoLqMASegOCdKLmJx6J",
			"typeName": "shape"
		},
		{
			"x": 460.33155390970114,
			"y": 1133.6513972998316,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 804.1846313476562,
				"text": "-When you've printed the prompt and are ready to accept input, \nyou call rl_on_new_line() to inform Readline that the cursor\n should be positioned at the beginning of the new line,\n just after the prompt.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aM",
			"id": "shape:iDDLKBQ6Xo1DLwCfOpxdR",
			"typeName": "shape"
		},
		{
			"x": 479.1168416965163,
			"y": 1286.5974914325031,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 783.1126098632812,
				"text": "-The function is typically called after printing the prompt but \nbefore reading user input using readline() or similar functions.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aN",
			"id": "shape:3WqnmOi4_qfAPW1DVI2Oi",
			"typeName": "shape"
		},
		{
			"x": 249.99030964331894,
			"y": 1376.4696173135032,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "geo",
			"props": {
				"w": 1029.1619312701991,
				"h": 228.2736605532223,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "aO",
			"id": "shape:vfnG0o5Cm3faZM6HrAUru",
			"typeName": "shape"
		},
		{
			"x": 259.0219647156502,
			"y": 1395.1487926503264,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 219.63940755780573,
				"text": "rl_replace_line",
				"font": "draw",
				"align": "middle",
				"autoSize": false,
				"scale": 0.8540526375877691
			},
			"parentId": "page:page",
			"index": "aP",
			"id": "shape:6La6GgscJ0V-Xm3Sj1Fbt",
			"typeName": "shape"
		},
		{
			"x": 456.231193549857,
			"y": 1390.889596446751,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 807.5591817256199,
				"text": "-the primary purpose of rl_replace_line() is to allow programs to\nupdate the current line of text dynamically. This might be useful fo\nrproviding feedback to the user, implementing interactive editing\nfeatures, or reflecting changes in the command prompt.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9606694524155693
			},
			"parentId": "page:page",
			"index": "aQ",
			"id": "shape:NuvJ797JjVC20U-ysfHrN",
			"typeName": "shape"
		},
		{
			"x": 247.96545646573122,
			"y": 1605.4928043697323,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "geo",
			"props": {
				"w": 1034.6301036479083,
				"h": 229.88346631010452,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "aR",
			"id": "shape:m-xBI8rk-KnVTScRuz6dU",
			"typeName": "shape"
		},
		{
			"x": 463.4221904927785,
			"y": 1631.4913724686603,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 803.290582107953,
				"text": "-this function replaces the current line of text in the input buffer \nwith a new line of text. After calling rl_replace_line(), the line in \nthe terminal is automatically redrawn with the new text.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9606694524155693
			},
			"parentId": "page:page",
			"index": "aS",
			"id": "shape:OtjI0XZKomkNp-bnKEB4c",
			"typeName": "shape"
		},
		{
			"x": 262.2972860373281,
			"y": 1628.798178483871,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 153.5933074951172,
				"text": "rl_redisplay",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aT",
			"id": "shape:2BdVBZBdvRlglETYCMTu1",
			"typeName": "shape"
		},
		{
			"x": 247.3414885103208,
			"y": 1835.6997628153547,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "geo",
			"props": {
				"w": 1038.4304831265151,
				"h": 596.2950384754292,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "aU",
			"id": "shape:o-33q-vDJtTQmLkP-eCeK",
			"typeName": "shape"
		},
		{
			"x": 291.74423748289774,
			"y": 1857.6142067314909,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 104.2497787475586,
				"text": "access()",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aW",
			"id": "shape:qDbtIjnvLVBoXNnw0I6Jn",
			"typeName": "shape"
		},
		{
			"x": 470.05165718578974,
			"y": 1863.4708404229573,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 792.2814331054688,
				"text": "-The access() function is a part of the <unistd.h> header in C \nprogramming language. It's used to check whether the calling \nprocess can access a given file or directory according to \nthe specified permissions.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aX",
			"id": "shape:ywsQml1PsopwhnMDYR1Cg",
			"typeName": "shape"
		},
		{
			"x": 479.74598805890787,
			"y": 2068.8032080515736,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 919.997802734375,
				"text": "-path: This is a pointer to a null-terminated string containing \nthe path to the file or directory that you want to check for access permissions.",
				"font": "draw",
				"align": "start",
				"autoSize": false,
				"scale": 0.9523683598166283
			},
			"parentId": "page:page",
			"index": "aY",
			"id": "shape:LJCeaV4s7BpsN5iLfPls3",
			"typeName": "shape"
		},
		{
			"x": 475.9225154453695,
			"y": 2180.122360989176,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 919.997802734375,
				"text": "-mode: This is an integer representing the access mode, specifying the permissions to check. It's typically a bitwise OR combination of one or more of the following constants:",
				"font": "draw",
				"align": "start",
				"autoSize": false,
				"scale": 0.900303918309767
			},
			"parentId": "page:page",
			"index": "aZ",
			"id": "shape:xE5GY5NaJ9OZcLNRoTJbg",
			"typeName": "shape"
		},
		{
			"x": 530.3255436577358,
			"y": 2276.5532960437104,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "light-green",
				"size": "m",
				"w": 538.0805053710938,
				"text": "R_OK: Test for read permission.\nW_OK: Test for write permission.\nX_OK: Test for execute (search) permission.\nF_OK: Test for existence of the file.",
				"font": "draw",
				"align": "start",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aa",
			"id": "shape:BcrfEsp7iNhdHBXZdzXm4",
			"typeName": "shape"
		},
		{
			"x": 611.0443981821927,
			"y": 2012.3023726537037,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "red",
				"size": "m",
				"w": 481.9624328613281,
				"text": "->int access(const char *path, int mode)<-",
				"font": "serif",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "ab",
			"id": "shape:ZW6kWEvAfXDtgtZvmOg6l",
			"typeName": "shape"
		},
		{
			"x": 246.99889673645555,
			"y": 2429.2640725817955,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "geo",
			"props": {
				"w": 1040.0306645972216,
				"h": 532.6402597271165,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "ac",
			"id": "shape:VHUkUPPs14AXbehS36iL9",
			"typeName": "shape"
		},
		{
			"x": 489.4792759081221,
			"y": 2464.3688757831997,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 754.3637084960938,
				"text": "-When you call fork(), the operating system creates a new \nprocess by duplicating the calling process. Both the parent \nand the child processes start executing from the same point\nin the code after the fork() call.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "ad",
			"id": "shape:zQgIO2UHDOdB5yPS-17Pb",
			"typeName": "shape"
		},
		{
			"x": 313.6666540420391,
			"y": 2463.917215644763,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 64.6013412475586,
				"text": "fork()",
				"font": "serif",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "ae",
			"id": "shape:Lnojv5c6ic-kpCPpueNOz",
			"typeName": "shape"
		},
		{
			"x": 462.76032773580323,
			"y": 2739.5753251601577,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 919.997802734375,
				"text": "-Return Values: The fork() function returns different values in the parent and child processes:\n      *In the parent process, fork() returns the process ID (PID) of the newly   \n   created  child process.\n      *In the child process, fork() returns 0 to indicate that it is the child process.",
				"font": "serif",
				"align": "start",
				"autoSize": false,
				"scale": 0.8729521604417756
			},
			"parentId": "page:page",
			"index": "af",
			"id": "shape:bfS5_9CUeJsVvzATMaE5A",
			"typeName": "shape"
		},
		{
			"x": 465.73523729850035,
			"y": 2633.8436754992345,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 919.997802734375,
				"text": "-Process Duplication: When you call fork(), the operating system creates a new process by duplicating the calling process. Both the parent and the child processes start executing from the same point in the code after the fork() call.",
				"font": "sans",
				"align": "start",
				"autoSize": false,
				"scale": 0.8827853712477733
			},
			"parentId": "page:page",
			"index": "ag",
			"id": "shape:RliVuOyOAYLp35fL0VPFu",
			"typeName": "shape"
		},
		{
			"x": 464.01782080824876,
			"y": 2899.306736077029,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 727.6004638671875,
				"text": "-Error Handling: If fork() fails to create a new process, it returns -1",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "ah",
			"id": "shape:9SqlnmbBv6GSXnN1TQ5mc",
			"typeName": "shape"
		},
		{
			"x": 245.01555608230808,
			"y": 2962.2873743914106,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "geo",
			"props": {
				"w": 1041.9238441835876,
				"h": 327.3511147777027,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "ai",
			"id": "shape:36Rmw-_ooLOv5gLl6ar9h",
			"typeName": "shape"
		},
		{
			"x": 470.7525856839335,
			"y": 2955.238125919528,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 788.2286987304688,
				"text": "\n-The wait() function suspends the calling thread until status \ninformation for a terminated child process is available or until \na signal is received. If multiple threads are waiting for the \nsame process, only one will receive the process status upon \ntermination. If status information is already available,\n the return is immediate.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aj",
			"id": "shape:3NUr1EA3rKOrRHdsOCSPq",
			"typeName": "shape"
		},
		{
			"x": 318.37647793884116,
			"y": 2995.4949738780483,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 64.34092712402344,
				"text": "wait()",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "ak",
			"id": "shape:3s-YiG0Xx-PMKfhMgjQEg",
			"typeName": "shape"
		},
		{
			"x": 678.3996024226839,
			"y": 3190.7787757668016,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "red",
				"size": "m",
				"w": 289.1727294921875,
				"text": "->pid_t wait(int *status)<-",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 1.1010310151617348
			},
			"parentId": "page:page",
			"index": "al",
			"id": "shape:5Los5MKPPglaTHVd1EUeD",
			"typeName": "shape"
		},
		{
			"x": 248.4502972325438,
			"y": 3290.351451795098,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "geo",
			"props": {
				"w": 1041.9238441835876,
				"h": 327.3511147777027,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "am",
			"id": "shape:QmmrY4HPwl39H4nr8PvjW",
			"typeName": "shape"
		},
		{
			"x": 457.51988370285375,
			"y": 3320.466463618712,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 829.5910639999043,
				"text": "-The waitpid() function will behave identically to wait(), if the pid \nargument is (pid_t)-1 and the options argument is 0. Otherwise, \nits behaviour will be modified by the values \nof the pid and options arguments",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9921251997513584
			},
			"parentId": "page:page",
			"index": "an",
			"id": "shape:X5PK1Im7QM_nsD-GG_DhZ",
			"typeName": "shape"
		},
		{
			"x": 564.593782765923,
			"y": 3463.3015056280196,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "red",
				"size": "m",
				"w": 619.0212218778622,
				"text": "->pid_t waitpid(pid_t pid, int *status, int options)<-",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 1.1010310151617348
			},
			"parentId": "page:page",
			"index": "ao",
			"id": "shape:PL-IOJg0hpsDAHwYqgEFk",
			"typeName": "shape"
		},
		{
			"x": 292.8962967283677,
			"y": 3328.248187445308,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 118.3122787475586,
				"text": "waitpid()",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "ap",
			"id": "shape:zpzcEuE52kPUrXjCSwdqc",
			"typeName": "shape"
		},
		{
			"x": 248.4723315949699,
			"y": 3616.8102860829817,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:wM9ooiYS9NaQrJq63djQD",
			"type": "geo",
			"props": {
				"w": 1041.9238441835876,
				"h": 327.3511147777027,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "aq",
			"typeName": "shape"
		},
		{
			"x": 492.0031442915015,
			"y": 3670.1498081365994,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:BomxDunkC1H3Jbdn21qUC",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 753.4699794982051,
				"text": "-The sigaction() function allows you to specify how a process\n should handle a particular signal.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9921251997513584
			},
			"parentId": "page:page",
			"index": "ar",
			"typeName": "shape"
		},
		{
			"x": 468.0880021311013,
			"y": 3770.67291273621,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:Te4wESz8g24t32R6tvf6G",
			"type": "text",
			"props": {
				"color": "red",
				"size": "m",
				"w": 811.1280655155441,
				"text": "->int sigaction(int signum, const struct sigaction *act, struct sigaction *oldact)<-",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9200782714567111
			},
			"parentId": "page:page",
			"index": "as",
			"typeName": "shape"
		},
		{
			"x": 286.5264571389283,
			"y": 3647.53761370919,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:2YW_ZxCOPVjwhy1QI-C3P",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 133.34634399414062,
				"text": "sigaction()",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "at",
			"typeName": "shape"
		},
		{
			"x": 250.10338619794277,
			"y": 3948.1830754248035,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:6h6oqwTyggpmlju9Zk299",
			"type": "geo",
			"props": {
				"w": 1042.4398106331826,
				"h": 190.76378423331542,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "au",
			"typeName": "shape"
		},
		{
			"x": 468.751142798223,
			"y": 4001.522597478421,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:_ciRAWXrcOC6U3MerecLb",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 785.2360916907079,
				"text": "-The sigemptyset() function initializes a signal set to be empty.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9921251997513584
			},
			"parentId": "page:page",
			"index": "av",
			"typeName": "shape"
		},
		{
			"x": 679.4098431751673,
			"y": 4070.3091481477413,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:iEuoHWdcQg_AgHK5nocI3",
			"type": "text",
			"props": {
				"color": "red",
				"size": "m",
				"w": 343.1041172149464,
				"text": "->int sigemptyset(sigset_t *set)<-",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9200782714567111
			},
			"parentId": "page:page",
			"index": "aw",
			"typeName": "shape"
		},
		{
			"x": 270.12952667747265,
			"y": 3983.243399053184,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:Ft5ZU-1-18a0gEZvuyO4L",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 151.5794219970703,
				"text": "sigemptyset()",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "ax",
			"typeName": "shape"
		},
		{
			"x": 469.67072985353644,
			"y": 4172.595042925043,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:NmfA9cl8j_1ixY83IewdY",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 954.8345947265625,
				"text": "The kill utility sends a signal to the processes specified by the pid operands.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 0.8508775242219694
			},
			"parentId": "page:page",
			"index": "ay",
			"typeName": "shape"
		},
		{
			"x": 250.10338619794277,
			"y": 3948.1830754248035,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:_5MW-8Rt-QlJJPTyDYLB2",
			"type": "geo",
			"props": {
				"w": 1042.4398106331826,
				"h": 190.76378423331542,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "b00",
			"typeName": "shape"
		},
		{
			"x": 468.751142798223,
			"y": 4001.522597478421,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:ZNn3qYIU9CClH0GL92SnS",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 785.2360916907079,
				"text": "-The sigemptyset() function initializes a signal set to be empty.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9921251997513584
			},
			"parentId": "page:page",
			"index": "b01",
			"typeName": "shape"
		},
		{
			"x": 679.4098431751673,
			"y": 4070.3091481477413,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:oqytgJ-ef0BQEpd2c56dM",
			"type": "text",
			"props": {
				"color": "red",
				"size": "m",
				"w": 343.1041172149464,
				"text": "->int sigemptyset(sigset_t *set)<-",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9200782714567111
			},
			"parentId": "page:page",
			"index": "b02",
			"typeName": "shape"
		},
		{
			"x": 270.12952667747265,
			"y": 3983.243399053184,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:1JHm0D34ztpSUFxCZb79R",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 151.5794219970703,
				"text": "sigemptyset()",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "b03",
			"typeName": "shape"
		},
		{
			"x": 248.68178991866068,
			"y": 4137.4886408888,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:vteRh4SuPe_yoICzEwOLQ",
			"type": "geo",
			"props": {
				"w": 1042.4398106331826,
				"h": 190.76378423331542,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "b04",
			"typeName": "shape"
		},
		{
			"x": 677.9882468958853,
			"y": 4259.614713611738,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:7CetF6aJ3lWZXxvFXcsmb",
			"type": "text",
			"props": {
				"color": "red",
				"size": "m",
				"w": 343.1041172149464,
				"text": "->int sigemptyset(sigset_t *set)<-",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9200782714567111
			},
			"parentId": "page:page",
			"index": "b06",
			"typeName": "shape"
		},
		{
			"x": 248.68178991866068,
			"y": 4137.4886408888,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:Gz8HSIL3DBXmk_ldZQ2Xo",
			"type": "geo",
			"props": {
				"w": 1042.4398106331826,
				"h": 190.76378423331542,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "b07",
			"typeName": "shape"
		},
		{
			"x": 677.9882468958853,
			"y": 4259.614713611738,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:yJeEZwnpAgWUiGdkUZEYh",
			"type": "text",
			"props": {
				"color": "red",
				"size": "m",
				"w": 343.1041172149464,
				"text": "->int sigemptyset(sigset_t *set)<-",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9200782714567111
			},
			"parentId": "page:page",
			"index": "b09",
			"typeName": "shape"
		},
		{
			"x": 324.1633503368997,
			"y": 4173.4790250192655,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:meesiDrjaJN58_45yoiBJ",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 50.15364456176758,
				"text": "kill()",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "b0A",
			"typeName": "shape"
		},
		{
			"x": 251.05961658002752,
			"y": 4329.914548121474,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:yvT7zH85Jlsndt55rfNwd",
			"type": "geo",
			"props": {
				"w": 1041.951720192006,
				"h": 269.2640711271794,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "b0C",
			"typeName": "shape"
		},
		{
			"x": 648.1740826623356,
			"y": 4509.098254558629,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:VWheTcAqnw_Z5OG-XKtSk",
			"type": "text",
			"props": {
				"color": "red",
				"size": "m",
				"w": 403.1667975739376,
				"text": "->char *getcwd(char *buf, size_t size)<-",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9200782714567111
			},
			"parentId": "page:page",
			"index": "b0F",
			"typeName": "shape"
		},
		{
			"x": 470.74073302559077,
			"y": 4361.964212044598,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:3UG2wPBy7ImzFoEICGOVQ",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 818.2005004882812,
				"text": "-The getcwd() function copies the absolute pathname of the\ncurrent working directory into the memory referenced by buf and\nreturns a pointer to buf.  The size argument is the size, in bytes, \nof the array referenced by buff.",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "b0G",
			"typeName": "shape"
		},
		{
			"x": 300.38422989997434,
			"y": 4362.135842139987,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:s0hlHP3455FgDCDYDKwLn",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 117.69270324707031,
				"text": "getcwd()",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "b0H",
			"typeName": "shape"
		},
		{
			"x": 315.92947987754354,
			"y": 4634.710886315212,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:lutZWh2JiAnJVMswOhbOE",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 86.328125,
				"text": "chdir()",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "b0I",
			"typeName": "shape"
		},
		{
			"x": 251.46251684036156,
			"y": 4598.603961921104,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:x4ZkJJHnQ2noK6iJ7B0Tj",
			"type": "geo",
			"props": {
				"w": 1041.951720192006,
				"h": 269.2640711271794,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "b0J",
			"typeName": "shape"
		},
		{
			"x": 694.6737522951789,
			"y": 4777.78766835826,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:lZRIdBm4K9sqr0iwO8IYw",
			"type": "text",
			"props": {
				"color": "red",
				"size": "m",
				"w": 310.9732588289191,
				"text": "->int chdir(const char *path)<-",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9200782714567111
			},
			"parentId": "page:page",
			"index": "b0K",
			"typeName": "shape"
		},
		{
			"x": 469.70336196854953,
			"y": 4627.101252469373,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:XBw81JEpHlrIvXq-aFPSr",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 920,
				"text": "the chdir() function is used to change the current working directory of the calling process. Changing the current working directory allows the process to navigate the filesystem and access files or directories in different locations.",
				"font": "draw",
				"align": "middle",
				"autoSize": false,
				"scale": 0.8923339320349973
			},
			"parentId": "page:page",
			"index": "b0M",
			"typeName": "shape"
		},
		{
			"x": 308.47447574159037,
			"y": 4907.1752596279575,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:2sRQEiLguaJrjReZ_CFrM",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 74.73957824707031,
				"text": "stat()",
				"font": "draw",
				"align": "middle",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "b0N",
			"typeName": "shape"
		},
		{
			"x": 251.26019883956656,
			"y": 4868.97503127916,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:cmo6hP2wdEAlcOeTgP8Ij",
			"type": "geo",
			"props": {
				"w": 1042.0789153112426,
				"h": 676.076831111202,
				"geo": "rectangle",
				"color": "black",
				"labelColor": "black",
				"fill": "none",
				"dash": "draw",
				"size": "m",
				"font": "draw",
				"text": "",
				"align": "middle",
				"verticalAlign": "middle",
				"growY": 0,
				"url": ""
			},
			"parentId": "page:page",
			"index": "b0O",
			"typeName": "shape"
		},
		{
			"x": 605.4333411024381,
			"y": 5003.154507861397,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:wyFab9kQMySYQNQ6Cnv_v",
			"type": "text",
			"props": {
				"color": "red",
				"size": "m",
				"w": 507.1487830148741,
				"text": "-int stat(const char *pathname, struct stat *buf)<-",
				"font": "sans",
				"align": "middle",
				"autoSize": true,
				"scale": 0.9200782714567111
			},
			"parentId": "page:page",
			"index": "b0P",
			"typeName": "shape"
		},
		{
			"x": 467.52229893595825,
			"y": 4891.219973534505,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:_1YpIgohAK8NVN0x1NWxg",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 920,
				"text": "-The stat() function is used to retrieve information about a file, given its filename. It fills a struct stat with information about the file, including its type, size, permissions, and timestamps.",
				"font": "draw",
				"align": "middle",
				"autoSize": false,
				"scale": 0.8923339320349973
			},
			"parentId": "page:page",
			"index": "b0Q",
			"typeName": "shape"
		},
		{
			"x": 492.836588882604,
			"y": 5041.77664794471,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:hYTpFd5W7S91NVbROBsmL",
			"type": "text",
			"props": {
				"color": "light-green",
				"size": "m",
				"w": 794.8997192382812,
				"text": "struct stat {\n    dev_t     st_dev;         /* ID of device containing file */\n    ino_t     st_ino;         /* Inode number */\n    mode_t    st_mode;        /* File type and mode */\n    nlink_t   st_nlink;       /* Number of hard links */\n    uid_t     st_uid;         /* User ID of owner */\n    gid_t     st_gid;         /* Group ID of owner */\n    off_t     st_size;        /* Total size, in bytes */\n    blksize_t st_blksize;     /* Block size for filesystem I/O */\n    blkcnt_t  st_blocks;      /* Number of 512B blocks allocated */\n    time_t    st_atime;       /* Time of last access */\n    time_t    st_mtime;       /* Time of last modification */\n    time_t    st_ctime;       /* Time of last status change */\n};",
				"font": "draw",
				"align": "start",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "b0R",
			"typeName": "shape"
		}
	]
}